@*@model IEnumerable<WMSModel.Location>*@
@model PagedList.IPagedList<WMS.Models.Location>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Location";
}
 <div>
      <form class ="form-inline" role="form">
          <div class="form-group"> <h3>Locations</h3> </div>
          <div class="form-group CreateBtnMargin"><p>@Html.ActionLink("Create New", "Create",null,new { @class = "btn btn-sm btn-success" })</p></div>
          <div class="form-group pull-right SearchBtnMargin">
              @using (Html.BeginForm("Index", "Location", FormMethod.Get))
                {<p>Find: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string,new { @class = "form-control" })  
                 <input class="btn btn-sm btn-success" type="submit" value="Search" /></p>}
          </div> 
      </form>  
 </div>

<table class="table table-bordered table-hover table-condensed">
     <tr class="table-header">
        <th>
            @Html.ActionLink("Location", "Index", new { sortOrder = ViewBag.NameSortParm })
        </th>
         <th>
            @Html.ActionLink("City", "Index", new { sortOrder = ViewBag.CitySortParm })
        </th>
         <th>
            @Html.ActionLink("Region", "Index", new { sortOrder = ViewBag.RegionSortParm })

        </th>
        <th>Edit | View | Delete</th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.LocName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.City.CityName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.City.Region.RegionName)
        </td>
        <td>
            @Html.ActionLink(" ", "Edit", new { id=item.LocID }, new { @class = "glyphicon glyphicon-pencil btn btn-warning btn-sm" }) 
            @Html.ActionLink(" ", "Details", new { id=item.LocID }, new { @class = "glyphicon glyphicon-list btn btn-primary btn-sm" }) 
            @Html.ActionLink(" ", "Delete", new { id=item.LocID }, new { @class = "glyphicon glyphicon-trash btn btn-danger btn-sm" })
        </td>
    </tr>
}

</table>
<div class="form-inline">
          <div class="form-group ">@Html.PagedListPager(Model, page => Url.Action("Index", 
                new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))</div>
          <div class="form-group pull-right">Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount</div>
</div>