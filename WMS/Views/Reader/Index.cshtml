@*@model IEnumerable<TASMVC5.Models.Reader>*@
@model PagedList.IPagedList<WMS.Models.Reader>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Readers";
}
    <div>
      <form class ="form-inline" role="form">
          <div class="form-group"> <h2>Readers</h2> </div>
          <div class="form-group CreateBtnMargin"><p>@Html.ActionLink("Create New", "Create",null,new { @class = "btn btn-sm btn-success" })</p></div>
          <div class="form-group pull-right SearchBtnMargin">
              @using (Html.BeginForm("Index", "Reader", FormMethod.Get))
                {<p>Find: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string,new { @class = "form-control" })  
                 <input class="btn btn-sm btn-success" type="submit" value="Search" /></p>}
          </div> 
      </form>  
    </div>

    <div class="table-responsive">
        <table class="table table-bordered table-hover table-condensed">
            <tr class="table-header">
                <th>
                    @*@Html.DisplayNameFor(model => model.RdrName)*@
                    @Html.ActionLink("Reader Name", "Index", new { sortOrder = ViewBag.NameSortParm })
                </th>
                <th>
                    IP Address
                </th>
                <th>
                    Port
                </th>
                <th>
                    @Html.ActionLink("Status", "Index", new { sortOrder = ViewBag.StatusSortParm })
                </th>
                <th>
                    @Html.ActionLink("Location", "Index", new { sortOrder = ViewBag.LocationSortParm })
                </th>
                <th>
                    Duty
                </th>
                <th>
                    @Html.ActionLink("Reader Type", "Index", new { sortOrder = ViewBag.RdrTypeSortParm })
                </th>
                <th> 
                    @Html.ActionLink("Vendor", "Index", new { sortOrder = ViewBag.VendorSortParm })
                </th>
                <th>Edit | View | Delete</th>
            </tr>

        @foreach (var item in Model) {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.RdrName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IpAdd)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IpPort)
                </td>
                <td>
                    @if(item.Status== true)
                    {
                        <p>Active</p>
                    }
                    else
                    {
                         <p>Inactive</p>
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Location.LocName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RdrDutyCode.RdrDutyName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ReaderType.RdrTypeName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ReaderType.ReaderVendor.VendorName)
                </td>
                <td>
                    @Html.ActionLink(" ", "Edit", new { id=item.RdrID }, new { @class = "glyphicon glyphicon-pencil btn btn-warning btn-sm" })
                    @Html.ActionLink(" ", "Details", new { id=item.RdrID }, new { @class = "glyphicon glyphicon-list btn btn-primary btn-sm" }) 
                    @Html.ActionLink(" ", "Delete", new { id=item.RdrID }, new { @class = "glyphicon glyphicon-trash btn btn-danger btn-sm" })
                </td>
            </tr>
        }

        </table>
    </div>

<div class="form-inline">
          <div class="form-group ">@Html.PagedListPager(Model, page => Url.Action("Index", 
                new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))</div>
          <div class="form-group pull-right">Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount</div>
</div>