@model WMS.Models.User

@{
    ViewBag.Title = "Edit";
}

<h2>Edit User</h2>

@using (Html.BeginForm("Edit","User", FormMethod.Post, new { enctype ="multipart/form-data" }))
{
@Html.AntiForgeryToken()
<div ng-app="UserLocation">
    <div class="form-horizontal" ng-controller="myCtrl" data-ng-init="initFunction(@Model.UserID)">
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.UserID)
        @Html.HiddenFor(model => model.EmpID)
        @Html.HiddenFor(model => model.UserName)
        @*<input type="hidden" name="UserID" ng-model="UserID" value=""/>*@
           <section class="col-md-4">
             
               <div class="form-group">
                     <div class="control-label col-md-4">User Name</div>
                         <div class="col-md-4">
                            @Html.Label(Model.UserName)
                        </div>
              </div>
             @* <div class="form-group">
                   <div class="control-label col-md-4">Password</div>
                      <div class="col-md-4">
                        @Html.TextBoxFor(model => model.Password,new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Password)
                      </div>
              </div>*@
              <div class="form-group">
                   <div class="control-label col-md-4">Name</div>
                      <div class="col-md-4">
                        @Html.TextBoxFor(model => model.Name,new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Name)
                      </div>
             </div>

            @*<div class="form-group">
                   <div class="control-label col-md-4">EmpNo</div>
                      <div class="col-md-4">
                        @Html.TextBoxFor(model => model.Emp.EmpNo,new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Emp.EmpNo)
                      </div>
             </div>*@



               <div class="form-group">
           <div class="control-label col-md-4">Company</div>
                <div class="col-md-4">
                    @Html.DropDownList("CompanyID", null,new { @class = "btn btn-default dropdown-toggle dropdown ComboBoxWidth"})
                    @Html.ValidationMessageFor(model => model.CompanyID)
                </div>
         </div>

                <div class="form-group">
        <div class="control-label col-md-4">Status</div>
            <div class="col-md-6">
                @Html.DropDownList("Status", new List<SelectListItem>
                    { 
                        new SelectListItem { Text = "Active", Value = "true"},
                        new SelectListItem { Text = "Inactive", Value = "false"}
                    },new { @class = "btn btn-default dropdown-toggle dropdown ComboBoxWidth"}) 
                        @Html.ValidationMessageFor(model => model.Status)
            </div>
        </div>
        <div class="form-group">
           <div class="control-label col-md-4">Data Role</div>
                <div class="col-md-4">
                    @Html.DropDownList("RoleID", null,new { @class = "btn btn-default dropdown-toggle dropdown ComboBoxWidth"})
                    @Html.ValidationMessageFor(model => model.RoleID)
                </div>
        </div> 
       <div class="form-group" style="display:none;" id="LocationDiv"> 
            <div class="control-label col-md-4">Location</div>
            <div class="col-md-8">
                <input type="hidden" placeholder="e.g Lahore" data-ng-model="location.name" id="uLocationCount" name="uLocationCount" class="form-control" value="{{locations.length}}">
                <div class="input-group" ng-repeat="location in locations">
                    <input disabled type="text" placeholder="e.g Lahore" id="testLocation{{$index + 1}}" data-ng-model="location.name" class="form-control">
                    <input type="hidden" placeholder="e.g Lahore" data-ng-model="location.name" id="uLocation{{$index + 1}}" name="uLocation{{$index + 1}}" class="form-control" value="{{location.name}}">
                    <span class="input-group-btn">
                        <button type="button" ng-click="removeLocation($index)" class="btn btn-default"><i class="fa fa-times"></i>[X]</button>
                    </span>
                </div>
                 <div  ng-show="isAddingLocation">
                    @*<input type="text" placeholder="Add a Location" data-ng-model="newLocation.name" class="form-control">*@
                    <select type="text" placeholder="Add a Location" data-ng-model="newLocation.name" class="form-control">
                        <option ng-repeat="loc in AllLocations">{{loc.Text}}</option>
                    </select>
                    <a class="btn btn-default btn-sm" ng-click="addLocation()">Add</a>
                    <a href="" style="margin-top:-5px;" ng-click="isAddingLocation = false">Done Adding</a>
                </div>
                <p><a href="" ng-click="isAddingLocation = true">+ Add Location</a></p>
            </div>
          </div>

 <div class="form-group" style="display:none;" id="ZoneDiv"> 
            <div class="control-label col-md-4">Zone</div>
            <div class="col-md-8">
                <input type="hidden" placeholder="e.g Lahore" data-ng-model="zone.name" id="uZoneCount" name="uZoneCount" class="form-control" value="{{zones.length}}">
                <div class="input-group" ng-repeat="zone in zones">
                    <input disabled type="text" placeholder="e.g Lahore" id="testZone{{$index + 1}}" data-ng-model="zone.name" class="form-control">
                    <input type="hidden" placeholder="e.g Lahore" data-ng-model="zone.name" id="uZone{{$index + 1}}" name="uZone{{$index + 1}}" class="form-control" value="{{zone.name}}">
                    <span class="input-group-btn">
                        <button type="button" ng-click="removeZone($index)" class="btn btn-default"><i class="fa fa-times"></i>[X]</button>
                    </span>
                </div>
                 <div  ng-show="isAddingZone">
                    @*<input type="text" placeholder="Add a Zone" data-ng-model="newZone.name" class="form-control">*@
                    <select type="text" placeholder="Add a Zone" data-ng-model="newZone.name" class="form-control">
                        <option ng-repeat="zon in AllZones">{{zon.Text}}</option>
                    </select>
                    <a class="btn btn-default btn-sm" ng-click="addZone()">Add</a>
                    <a href="" style="margin-top:-5px;" ng-click="isAddingZone = false">Done Adding</a>
                </div>
                <p><a href="" ng-click="isAddingZone = true">+ Add Zone</a></p>
            </div>
          </div>
 <div class="form-group" style="display:none;" id="RegionDiv"> 
            <div class="control-label col-md-4">Region</div>
            <div class="col-md-8">
                <input type="hidden" placeholder="e.g Lahore" data-ng-model="region.name" id="uRegionCount" name="uRegionCount" class="form-control" value="{{regions.length}}">
                <div class="input-group" ng-repeat="region in regions">
                    <input disabled type="text" placeholder="e.g Lahore" id="testRegion{{$index + 1}}" data-ng-model="region.name" class="form-control">
                    <input type="hidden" placeholder="e.g Lahore" data-ng-model="region.name" id="uRegion{{$index + 1}}" name="uRegion{{$index + 1}}" class="form-control" value="{{region.name}}">
                    <span class="input-group-btn">
                        <button type="button" ng-click="removeRegion($index)" class="btn btn-default"><i class="fa fa-times"></i>[X]</button>
                    </span>
                </div>
                 <div  ng-show="isAddingRegion">
                    @*<input type="text" placeholder="Add a Region" data-ng-model="newRegion.name" class="form-control">*@
                    <select type="text" placeholder="Add a Region" data-ng-model="newRegion.name" class="form-control">
                        <option ng-repeat="reg in AllRegions">{{reg.Text}}</option>
                    </select>
                    <a class="btn btn-default btn-sm" ng-click="addRegion()">Add</a>
                    <a href="" style="margin-top:-5px;" ng-click="isAddingRegion = false">Done Adding</a>
                </div>
                <p><a href="" ng-click="isAddingRegion = true">+ Add Region</a></p>
            </div>
          </div>

 <div class="form-group" style="display:none;" id="CityDiv"> 
            <div class="control-label col-md-4">City</div>
            <div class="col-md-8">
                <input type="hidden" placeholder="e.g Lahore" data-ng-model="city.name" id="uCityCount" name="uCityCount" class="form-control" value="{{cities.length}}">
                <div class="input-group" ng-repeat="city in cities">
                    <input disabled type="text" placeholder="e.g Lahore" id="testCity{{$index + 1}}" data-ng-model="city.name" class="form-control">
                    <input type="hidden" placeholder="e.g Lahore" data-ng-model="city.name" id="uCity{{$index + 1}}" name="uCity{{$index + 1}}" class="form-control" value="{{city.name}}">
                    <span class="input-group-btn">
                        <button type="button" ng-click="removeCity($index)" class="btn btn-default"><i class="fa fa-times"></i>[X]</button>
                    </span>
                </div>
                 <div  ng-show="isAddingCity">
                  
                    <select type="text" placeholder="Add a City" data-ng-model="newCity.name" class="form-control">
                        <option ng-repeat="cit in AllCities">{{cit.Text}}</option>
                    </select>
                    <a class="btn btn-default btn-sm" ng-click="addCity()">Add</a>
                    <a href="" style="margin-top:-5px;" ng-click="isAddingCity = false">Done Adding</a>
                </div>
                <p><a href="" ng-click="isAddingCity = true">+ Add City</a></p>
            </div>
          </div>
      
        <div class="form-group">
            <div class="control-label col-md-4">Permanent Staff</div>
            <div class="col-md-6">
                 @Html.DropDownList("ViewPermanentStaff", new List<SelectListItem>
                    { 
                        new SelectListItem { Text = "Yes", Value = "true"},
                        new SelectListItem { Text = "No", Value = "false"}
                    },new { @class = "btn btn-default dropdown-toggle dropdown ComboBoxWidth"}) 
            </div>
        </div>
        
         <div class="form-group">
           <div class="control-label col-md-4">Permanent Management</div>
            <div class="col-md-6">
                 @Html.DropDownList("ViewPermanentMgm", new List<SelectListItem>
                    { 
                        new SelectListItem { Text = "Yes", Value = "true"},
                        new SelectListItem { Text = "No", Value = "false"}
                    },new { @class = "btn btn-default dropdown-toggle dropdown ComboBoxWidth"}) 
            </div>
        </div>

        <div class="form-group">
           <div class="control-label col-md-4">Contractuals</div>
            <div class="col-md-6">
                 @Html.DropDownList("ViewContractual", new List<SelectListItem>
                    { 
                        new SelectListItem { Text = "Yes", Value = "true"},
                        new SelectListItem { Text = "No", Value = "false"}
                    },new { @class = "btn btn-default dropdown-toggle dropdown ComboBoxWidth"}) 
            </div>
        </div>

@*        <div class="form-group">
            <div class="control-label col-md-4">Only Location</div>
            <div class="col-md-6">
                 @Html.DropDownList("ViewLocation", new List<SelectListItem>
                    { 
                        new SelectListItem { Text = "Yes", Value = "true"},
                        new SelectListItem { Text = "No", Value = "false"}
                    },new { @class = "btn btn-default dropdown-toggle dropdown ComboBoxWidth"})
                @Html.ValidationMessageFor(model => model.ViewLocation) 
            </div>
        </div>*@

        <div class="form-group">
            <div class="control-label col-md-4">Can Edit</div>
            <div class="col-md-6">
                @Html.DropDownList("CanEdit", new List<SelectListItem>
                { 
                    new SelectListItem { Text = "No", Value = "false"},
                    new SelectListItem { Text = "Yes", Value = "true"}
                    },new { @class = "btn btn-default dropdown-toggle dropdown ComboBoxWidthSmall"})  
                        @Html.ValidationMessageFor(model => model.CanEdit) 
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-4">Can Delete</div>
            <div class="col-md-6">
                @Html.DropDownList("CanDelete", new List<SelectListItem>
                { new SelectListItem { Text = "No", Value = "false"},
                    new SelectListItem { Text = "Yes", Value = "true"}
                    },new { @class = "btn btn-default dropdown-toggle dropdown ComboBoxWidthSmall"})
                    @Html.ValidationMessageFor(model => model.CanDelete)  
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-4">Can Add</div>
            <div class="col-md-6">
                @Html.DropDownList("CanAdd", new List<SelectListItem>
                { new SelectListItem { Text = "No", Value = "false"},
                    new SelectListItem { Text = "Yes", Value = "true"}
                    },new { @class = "btn btn-default dropdown-toggle dropdown ComboBoxWidthSmall"}) 
            </div>
        </div>

        <div class="form-group">
           <div class="control-label col-md-4">Can View</div>
            <div class="col-md-6">
                @Html.DropDownList("CanView", new List<SelectListItem>
                { new SelectListItem { Text = "No", Value = "false"},
                    new SelectListItem { Text = "Yes", Value = "true"}
                    },new { @class = "btn btn-default dropdown-toggle dropdown ComboBoxWidthSmall"}) 
            </div>
        </div>      
     </section>
       

     <section class="col-md-4">
        <center><h3>Application Module</h3></center> 
             <div class="form-group">
                <div class="control-label col-md-6">User</div>
                <div class="col-md-6">
                    @Html.DropDownList("MUser", new List<SelectListItem>
                    { new SelectListItem { Text = "No", Value = "false", Selected=true},
                        new SelectListItem { Text = "Yes", Value = "true"}
                        },new { @class = "btn btn-default dropdown-toggle dropdown ComboBoxWidthSmall"}) 
                </div>
            </div>
        

            <div class="form-group">
                <div class="control-label col-md-6">HR</div>
                <div class="col-md-6">
                    @Html.DropDownList("MHR", new List<SelectListItem>
                    { new SelectListItem { Text = "No", Value = "false", Selected=true},
                        new SelectListItem { Text = "Yes", Value = "true"}
                        },new { @class = "btn btn-default dropdown-toggle dropdown ComboBoxWidthSmall"}) 
                </div>
            </div>
         

            <div class="form-group">
                <div class="control-label col-md-6">Device</div>
                <div class="col-md-6">
                    @Html.DropDownList("MDevice", new List<SelectListItem>
                    { new SelectListItem { Text = "No", Value = "false", Selected=true},
                        new SelectListItem { Text = "Yes", Value = "true"}
                        },new { @class = "btn btn-default dropdown-toggle dropdown ComboBoxWidthSmall"}) 
                </div>
            </div>
            <div class="form-group">
                 <div class="control-label col-md-6">Desktop</div>
                <div class="col-md-6">
                    @Html.DropDownList("MDesktop", new List<SelectListItem>
                    { new SelectListItem { Text = "No", Value = "false", Selected=true},
                        new SelectListItem { Text = "Yes", Value = "true"}
                        },new { @class = "btn btn-default dropdown-toggle dropdown ComboBoxWidthSmall"}) 
                </div>
            </div>
            <div class="form-group">
                 <div class="control-label col-md-6">Edit Attendance</div>
                <div class="col-md-6">
                    @Html.DropDownList("MEditAtt", new List<SelectListItem>
                    { new SelectListItem { Text = "No", Value = "false", Selected=true},
                        new SelectListItem { Text = "Yes", Value = "true"}
                        },new { @class = "btn btn-default dropdown-toggle dropdown ComboBoxWidthSmall"}) 
                </div>
            </div>

            <div class="form-group">
                 <div class="control-label col-md-6">Leave</div>
                <div class="col-md-6">
                    @Html.DropDownList("MLeave", new List<SelectListItem>
                    { new SelectListItem { Text = "No", Value = "false", Selected=true},
                        new SelectListItem { Text = "Yes", Value = "true"}
                        },new { @class = "btn btn-default dropdown-toggle dropdown ComboBoxWidthSmall"}) 
                </div>
            </div>
         <div class="form-group">
                    <div class="control-label col-md-4">Roster</div>
                    <div class="col-md-6">
                        @Html.DropDownList("MRoster", new List<SelectListItem>
                        { new SelectListItem { Text = "No", Value = "false", Selected=true},
                            new SelectListItem { Text = "Yes", Value = "true"}
                            },new { @class = "btn btn-default dropdown-toggle dropdown ComboBoxWidthSmall"}) 
                    </div>
                 </div>
       </section>

         <section class="col-md-4"> 
             <center><h3>Reports Module</h3></center>
        
                <div class="form-group">
                    <div class="control-label col-md-6">Leave</div>
                    <div class="col-md-6">
                        @Html.DropDownList("MRLeave", new List<SelectListItem>
                        { new SelectListItem { Text = "No", Value = "false", Selected=true},
                            new SelectListItem { Text = "Yes", Value = "true"}
                            },new { @class = "btn btn-default dropdown-toggle dropdown ComboBoxWidthSmall"}) 
                    </div>
                </div>

                <div class="form-group">
                   <div class="control-label col-md-6">Daily</div>
                    <div class="col-md-6">
                        @Html.DropDownList("MRDailyAtt", new List<SelectListItem>
                        { new SelectListItem { Text = "No", Value = "false", Selected=true},
                            new SelectListItem { Text = "Yes", Value = "true"}
                            },new { @class = "btn btn-default dropdown-toggle dropdown ComboBoxWidthSmall"}) 
                    </div>
                </div>

                <div class="form-group">
                   <div class="control-label col-md-6">Monthly</div>
                    <div class="col-md-6">
                        @Html.DropDownList("MRMonthly", new List<SelectListItem>
                        { new SelectListItem { Text = "No", Value = "false", Selected=true},
                            new SelectListItem { Text = "Yes", Value = "true"}
                            },new { @class = "btn btn-default dropdown-toggle dropdown ComboBoxWidthSmall"}) 
                    </div>
                </div>


                 <div class="form-group">
                    <div class="control-label col-md-6">Audit</div>
                    <div class="col-md-6">
                        @Html.DropDownList("MRAudit", new List<SelectListItem>
                        { new SelectListItem { Text = "No", Value = "false", Selected=true},
                            new SelectListItem { Text = "Yes", Value = "true"}
                            },new { @class = "btn btn-default dropdown-toggle dropdown ComboBoxWidthSmall"}) 
                    </div>
                 </div>


                 <div class="form-group">
                   <div class="control-label col-md-6">Manual Edit</div>
                    <div class="col-md-6">
                        @Html.DropDownList("MRManualEditAtt", new List<SelectListItem>
                        { new SelectListItem { Text = "No", Value = "false", Selected=true},
                            new SelectListItem { Text = "Yes", Value = "true"}
                            },new { @class = "btn btn-default dropdown-toggle dropdown ComboBoxWidthSmall"}) 
                    </div>
                 </div>


                 <div class="form-group">
                    <div class="control-label col-md-6">Employee</div>
                    <div class="col-md-6">
                        @Html.DropDownList("MREmployee", new List<SelectListItem>
                        { new SelectListItem { Text = "No", Value = "false", Selected=true},
                            new SelectListItem { Text = "Yes", Value = "true"}
                            },new { @class = "btn btn-default dropdown-toggle dropdown ComboBoxWidthSmall"}) 
                    </div>
                </div>

                <div class="form-group">
                    <div class="control-label col-md-6">Detail</div>
                        <div class="col-md-6">
                            @Html.DropDownList("MRDetail", new List<SelectListItem>
                            { new SelectListItem { Text = "No", Value = "false", Selected=true},
                                new SelectListItem { Text = "Yes", Value = "true"}
                                },new { @class = "btn btn-default dropdown-toggle dropdown ComboBoxWidthSmall"}) 
                        </div>
                </div>

                <div class="form-group">
                   <div class="control-label col-md-6">Graph</div>
                    <div class="col-md-6">
                        @Html.DropDownList("MRGraph", new List<SelectListItem>
                        { new SelectListItem { Text = "No", Value = "false", Selected=true},
                            new SelectListItem { Text = "Yes", Value = "true"}
                            },new { @class = "btn btn-default dropdown-toggle dropdown ComboBoxWidthSmall"}) 
                    </div>
                </div>

                 <div class="form-group">
                    <div class="control-label col-md-6">Summary</div>
                    <div class="col-md-6">
                        @Html.DropDownList("MRSummary", new List<SelectListItem>
                        { new SelectListItem { Text = "No", Value = "false", Selected=true},
                            new SelectListItem { Text = "Yes", Value = "true"}
                            },new { @class = "btn btn-default dropdown-toggle dropdown ComboBoxWidthSmall"}) 
                    </div>
                </div>
         </section>
          

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default btn-success" />
              @Html.ActionLink("Back to List", "Index",null,new { @class = "btn btn-primary " })
            </div>
        </div>
    </div>
</div>
}
<script type="text/javascript">
    var app = angular.module('UserLocation', []);
    app.controller('myCtrl', function ($scope,$http) {
        //Add Location
        $scope.addLocation = function () {
            if (!$scope.locations) $scope.locations = [];
            if ($scope.newLocation.name != '') {
                $scope.locations.push($scope.newLocation);
                $scope.newLocation = {
                    name: ''
                };
            }
        };
        //Remove Location
        $scope.removeLocation = function (index) {
            $scope.locations.splice(index, 1);
        };
        //Add Zone
        $scope.addZone = function () {
            if (!$scope.zones) $scope.zones = [];
            if ($scope.newZone.name != '') {
                $scope.zones.push($scope.newZone);
                $scope.newZone = {
                    name: ''
                };
            }
        };
        //Remove Zone 
        $scope.removeZone = function (index) {
            $scope.zones.splice(index, 1);
        };
        //Add Region
        $scope.addRegion = function () {
            if (!$scope.regions) $scope.regions = [];
            if ($scope.newRegion.name != '') {
                $scope.regions.push($scope.newRegion);
                $scope.newRegion = {
                    name: ''
                };
            }
        };
        //Remove Region 
        $scope.removeRegion = function (index) {
            $scope.regions.splice(index, 1);
        };
        //Add City
        $scope.addCity = function () {
            if (!$scope.cities) $scope.cities = [];
            if ($scope.newCity.name != '') {
                $scope.cities.push($scope.newCity);
                $scope.newCity = {
                    name: ''
                };
            }
        };
        //Remove Region 
        $scope.removeCity = function (index) {
            $scope.cities.splice(index, 1);
        };
        // init function
        $scope.initFunction = function (ID)
        {
            $http.get('/WMS/User/UserZoneList').success(function (res) {
                $scope.AllZones = res;
                console.log(res);
            });
            $http.get('/WMS/User/UserRegionList').success(function (res) {
                $scope.AllRegions = res;
                console.log(res);
            });
            $http.get('/WMS/User/UserCityList').success(function (res) {
                $scope.AllCities = res;
                console.log(res);
            });
            $http.get('/WMS/User/UserLocationList/').success(function (res) {
                $scope.AllLocations = res;
                console.log(res);
            });
            $http.get('/WMS/User/SelectedUserLocList/' + ID).success(function (res) {
                $scope.locations = [];
                for (i = 0 ; i < res.length; i++) {
                    $scope.locations.push({ name: res[i].Text });
                }
                console.log(res);
            });
            $http.get('/WMS/User/SelectedUserCityList/' + ID).success(function (res) {
                $scope.cities = [];
                for (i = 0 ; i < res.length; i++) {
                    $scope.cities.push({ name: res[i].Text });
                }
                console.log(res);
            });
            $http.get('/WMS/User/SelectedUserRegionList/' + ID).success(function (res) {
                $scope.regions = [];
                for (i = 0 ; i < res.length; i++) {
                    $scope.regions.push({ name: res[i].Text });
                }
                console.log(res);
            });
            $http.get('/WMS/User/SelectedUserZoneList/' + ID).success(function (res) {
                $scope.zones = [];
                for (i = 0 ; i < res.length; i++) {
                    $scope.zones.push({ name: res[i].Text });
                }
                console.log(res);
            });
        }
    });
</script><script src="@Url.Content("~/Scripts/User/Access.js")"></script><script src="@Url.Content("~/Scripts/Employee/ZoneRegion.js")"></script>